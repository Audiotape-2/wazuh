/*
 * Wazuh Vulnerability Scanner - Unit Tests
 * Copyright (C) 2015, Wazuh Inc.
 * February 21, 2024.
 *
 * This program is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public
 * License (version 2) as published by the FSF - Free Software
 * Foundation.
 */

#ifndef _CLEAN_UP_DATA_HPP
#define _CLEAN_UP_DATA_HPP

#include "rocksDBWrapper.hpp"
#include "scanOrchestrator.hpp"
#include "gtest/gtest.h"

/**
 * @brief CleanUpData test class.
 */
class CleanUpDataTest : public ::testing::Test
{
protected:
    // LCOV_EXCL_START
    CleanUpDataTest() = default;
    ~CleanUpDataTest() override = default;

    /**
     * @brief Set up for every test.
     *
     */
    void SetUp() override
    {
        m_inventoryDatabase = std::make_unique<Utils::RocksDBWrapper>(INVENTORY_DB_PATH);
        m_inventoryDatabase->put("node01_001_fdbd3c83c04c74d0cc7ad2f0e04ed88adfd74ad5",
                                 "CVE-2021-33560,CVE-2019-13627,CVE-2021-40528");
        m_inventoryDatabase->put("node01_001_ec465b7eb5fa011a336e95614072e4c7f1a65a53", "CVE-2024-5678,CVE-2023-5362");
    }

    /**
     * @brief Tear down for every test.
     *
     */
    void TearDown() override
    {
        std::remove(INVENTORY_DB_PATH);
    }

    /**
     * @brief RocksDB inventory database.
     *
     */
    std::unique_ptr<Utils::RocksDBWrapper> m_inventoryDatabase;
    // LCOV_EXCL_STOP
};

#endif // _CLEAN_UP_DATA_HPP
