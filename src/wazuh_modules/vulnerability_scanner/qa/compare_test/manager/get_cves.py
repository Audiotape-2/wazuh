import os
import subprocess
import json
from pathlib import Path

subprocess.Popen("/var/ossec/bin/wazuh-control stop",shell=True)

get_os_inventory_cmd = f"ldb --db=/var/ossec/queue/vd/inventory/ --column_family=os scan"
get_package_inventory_cmd = f"ldb --db=/var/ossec/queue/vd/inventory/ --column_family=package scan"

os_cves = (os.popen(get_os_inventory_cmd).read()).split('\n')
packages_cves = (os.popen(get_package_inventory_cmd).read()).split('\n')

w_entries = {}
for package in packages_cves:
    if not package:
        continue
    parts = package.split(':')
    agent_and_itemid = parts[0].split('_')
    agent = agent_and_itemid[0]
    itemid = agent_and_itemid[1]
    itemid = itemid[:-1]
    cves = parts[1].split(',')
    hostname = subprocess.Popen(f"""sqlite3 /var/ossec/queue/db/global.db "select name from agent where id = '{agent}'" """, shell=True, stdout=subprocess.PIPE).stdout.read().decode()
    hostname = hostname[:-1]
    for cve in cves:
        if not cve:
            continue
        cve = cve.strip()
        entry = {}
        entry['cve'] = cve
        name = subprocess.Popen(f""" sqlite3 /var/ossec/queue/db/{agent}.db "select name from sys_programs where item_id = '{itemid}' " """, shell=True, stdout=subprocess.PIPE).stdout.read().decode()
        name = name[:-1]
        os = subprocess.Popen(f"""sqlite3 /var/ossec/queue/db/{agent}.db "select os_name, os_version from sys_osinfo" """, shell=True, stdout=subprocess.PIPE).stdout.read().decode()
        os = os[:-1]
        entry['name'] = name
        entry['os'] = os
        if hostname not in w_entries:
            w_entries[hostname] = {}
        w_entries[hostname][cve + '_' + entry['name']] = entry

for os_cve in os_cves:
    if not os_cve:
        continue
    parts = os_cve.split(':')
    entry['cve'] = parts[1]
    agent_and_osname = parts[0].split('_')
    agent = agent_and_osname[0]
    osname = agent_and_osname[1]
    cves = parts[1].split(',')
    hostname = subprocess.Popen(f"""sqlite3 /var/ossec/queue/db/global.db "select name from agent where id = '{agent}'" """, shell=True, stdout=subprocess.PIPE).stdout.read().decode()
    hostname = hostname[:-1]
    for cve in cves:
        if not cve:
            continue
        cve = cve.strip()
        entry = {}
        entry['cve'] = cve
        os_name = subprocess.Popen(f"""sqlite3 /var/ossec/queue/db/{agent}.db "select os_name from sys_osinfo" """).stdout.read().decode()
        os_version = subprocess.Popen(f"""sqlite3 /var/ossec/queue/db/{agent}.db "select os_version from sys_osinfo" """).stdout.read().decode()
        entry['name'] = osname
        entry['os'] = os_version
        if hostname not in w_entries:
            w_entries[hostname] = {}
        w_entries[hostname][cve + '_' + entry['name']] = entry


subprocess.Popen("rm -rf /usr/local/bin/results",shell=True)
print(subprocess.Popen("vuls scan -results-dir=/usr/local/bin/results -config=/usr/local/bin/config.toml",shell=True, stdout=subprocess.PIPE, cwd="/usr/local/bin").stdout.read().decode())
print(subprocess.Popen("vuls report -results-dir=/usr/local/bin/results -config=/usr/local/bin/config.toml -format-json ",shell=True, stdout=subprocess.PIPE,cwd="/usr/local/bin").stdout.read().decode())

results_path = '/usr/local/bin/results'
vuls_entries = {}
folders = Path(results_path).glob('*')
for folder in folders:
    for file in folder.glob('*.json'):
        with open(file) as f:
            data = json.load(f)
            hostname = data['serverName']
            os = data['family'] + ' ' + data['release']
            for cve_entry in data['scannedCves'].values():
                cve = cve_entry['cveID']
                for package in cve_entry['affectedPackages']:
                    entry = {}
                    entry['cve'] = cve
                    entry['os'] = os
                    entry['name'] = package['name']
                    if hostname not in vuls_entries:
                        vuls_entries[hostname] = {}
                    vuls_entries[hostname][cve + '_' + entry['name']] = entry


for agent, cves in w_entries.items():
    print(f"************ Agent: {agent} ************")

    print("Wazuh Vulnerability Scanner: ", len(w_entries[agent]))
    print("Vuls Vulnerability Scanner: ", len(vuls_entries[agent]))

    print("** Wazuh Vulnerabilities not found in Vuls **")
    count = 0
    for w_entry, w_value in cves.items():
        if w_entry not in vuls_entries[agent]:
            print(f"'CVE: '{w_value['cve']:<20} 'Name: '{w_value['name']:<30} 'OS: '{w_value['os']:<20}")
            count += 1
    print("Total: ", count)


    print("** Vulnerabilities found in both Wazuh and Vuls **")
    count = 0
    for w_entry, w_value in cves.items():
        if w_entry in vuls_entries[agent]:
            print(f"'CVE: '{w_value['cve']:<20} 'Name: '{w_value['name']:<30} 'OS: '{w_value['os']:<20}")
            count += 1
    print("Total: ", count)


    print("** Vuls Vulnerabilities not found in Wazuh **")
    count = 0
    for v_entry, v_value in vuls_entries[agent].items():
        if v_entry not in w_entries[agent]:
            print(f"'CVE: '{v_value['cve']:<20} 'Name: '{v_value['name']:<30} 'OS: '{v_value['os']:<20}")
            count += 1
    print("Total: ", count)
